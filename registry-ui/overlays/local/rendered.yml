apiVersion: v1
kind: Service
metadata:
  annotations:
    app.kubernetes.io/ingress-hostname: local.registry.k3d.localhost
    app.kubernetes.io/registry-interna-url: http://local.registry.localhost:5000
    app.kubernetes.io/site-title: Local Registry
  labels:
    app.kubernetes.io/component: registry-ui
    app.kubernetes.io/instance: local.registry-ui
    app.kubernetes.io/name: registry-ui
  name: local-registry-ui
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app.kubernetes.io/component: registry-ui
    app.kubernetes.io/instance: local.registry-ui
    app.kubernetes.io/name: registry-ui
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    app.kubernetes.io/ingress-hostname: local.registry.k3d.localhost
    app.kubernetes.io/registry-interna-url: http://local.registry.localhost:5000
    app.kubernetes.io/site-title: Local Registry
  labels:
    app.kubernetes.io/component: registry-ui
    app.kubernetes.io/instance: local.registry-ui
    app.kubernetes.io/name: registry-ui
  name: local-registry-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/component: registry-ui
      app.kubernetes.io/instance: local.registry-ui
      app.kubernetes.io/name: registry-ui
  template:
    metadata:
      annotations:
        app.kubernetes.io/ingress-hostname: local.registry.k3d.localhost
        app.kubernetes.io/registry-interna-url: http://local.registry.localhost:5000
        app.kubernetes.io/site-title: Local Registry
      labels:
        app.kubernetes.io/component: registry-ui
        app.kubernetes.io/instance: local.registry-ui
        app.kubernetes.io/name: registry-ui
    spec:
      containers:
      - env:
        - name: SINGLE_REGISTRY
          value: "true"
        - name: REGISTRY_SECURED
          value: "false"
        - name: DELETE_IMAGES
          value: "true"
        - name: NGINX_PROXY_PASS_URL
          value: http://local.registry.localhost:5000
        - name: REGISTRY_TITLE
          value: Local Registry
        image: docker.io/joxit/docker-registry-ui:2.5.6-debian
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
        name: registry-ui
        ports:
        - containerPort: 80
          name: http
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
        resources:
          limits:
            cpu: 100m
            memory: 50Mi
          requests:
            cpu: 20m
            memory: 10Mi
        startupProbe:
          failureThreshold: 3
          httpGet:
            path: /
            port: http
            scheme: HTTP
          initialDelaySeconds: 5
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    app.kubernetes.io/ingress-hostname: local.registry.k3d.localhost
    app.kubernetes.io/registry-interna-url: http://local.registry.localhost:5000
    app.kubernetes.io/site-title: Local Registry
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
  labels:
    app.kubernetes.io/component: registry-ui
    app.kubernetes.io/instance: local.registry-ui
    app.kubernetes.io/name: registry-ui
  name: local-registry-ui
spec:
  ingressClassName: traefik
  rules:
  - host: local.registry.k3d.localhost
    http:
      paths:
      - backend:
          service:
            name: local-registry-ui
            port:
              name: http
        path: /
        pathType: Prefix
  tls:
  - hosts:
    - local.registry.k3d.localhost
